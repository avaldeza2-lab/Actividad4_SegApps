name: CI/CD

on:
  push:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r dev-requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Bandit security scan
        run: python -m bandit -r . -ll --exclude venv,tests || true

      - name: Dependency audit
        run: python -m pip_audit || true

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      SSH_PORT: "2222"  # porque usas NAT + port forwarding 2222 -> 22

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          # Aceptar la huella del host en el puerto 2222
          ssh-keyscan -p "$SSH_PORT" -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Upload source via rsync (port 2222)
        run: |
          rsync -az --delete --exclude ".git" -e "ssh -p $SSH_PORT" ./ ${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.TARGET_DIR }}

      - name: Python venv + deps (server side, port 2222)
        env:
          TARGET_DIR: ${{ secrets.TARGET_DIR }}
        run: |
          ssh -p "$SSH_PORT" ${{ secrets.USER }}@${{ secrets.HOST }} "
            set -e
            cd ${TARGET_DIR}
            python3 -m venv .venv || true
            . .venv/bin/activate
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            pip install gunicorn
          "

      - name: Restart service (port 2222)
        run: |
          ssh -p "$SSH_PORT" ${{ secrets.USER }}@${{ secrets.HOST }} "sudo systemctl daemon-reload && sudo systemctl enable secure-app && sudo systemctl restart secure-app && systemctl --no-pager --full status secure-app | head -n 30"